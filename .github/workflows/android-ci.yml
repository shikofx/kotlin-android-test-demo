name: SDT-DEMO CI

on: 
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

# Добавляем права для публикации на GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs: 
  build_and_analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
    
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Static Analysis (Checkstyle)
        run: ./gradlew app:checkstyleDebug

      - name: Run Static Analysis (PMD)
        run: ./gradlew app:pmdDebug

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload full build directory for inspection
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-build-output
          path: app/build/

      - name: Upload analysis reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: app/build/reports/

      - name: Structure reports for GitHub Pages
        if: always()
        run: |
          set -e
          mkdir -p pages_root

          # --- Prepare index.html content ---
          cat <<EOF > pages_root/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <title>Static Analysis Reports</title>
            <style>body { font-family: sans-serif; padding: 2em; } li { margin-bottom: 1em; }</style>
          </head>
          <body>
            <h1>Static Analysis Reports</h1>
            <p>Reports generated for the latest build. If a link is broken, the report was not generated.</p>
            <ul>
          EOF

          # --- Process PMD ---
          if [ -d app/build/reports/pmd ]; then
            echo "Found PMD reports directory. Copying..."
            mkdir -p pages_root/pmd
            cp -r app/build/reports/pmd/* pages_root/pmd/
            [ -f pages_root/pmd/debug.html ] && echo '<li><a href="pmd/debug.html">PMD Report (Debug)</a></li>' >> pages_root/index.html
            [ -f pages_root/pmd/release.html ] && echo '<li><a href="pmd/release.html">PMD Report (Release)</a></li>' >> pages_root/index.html
          fi

          # --- Process Checkstyle ---
          if [ -d app/build/reports/checkstyle ]; then
            echo "Found Checkstyle reports directory. Copying..."
            mkdir -p pages_root/checkstyle
            cp -r app/build/reports/checkstyle/* pages_root/checkstyle/
            [ -f pages_root/checkstyle/debug.html ] && echo '<li><a href="checkstyle/debug.html">Checkstyle Report (Debug)</a></li>' >> pages_root/index.html
            [ -f pages_root/checkstyle/release.html ] && echo '<li><a href="checkstyle/release.html">Checkstyle Report (Release)</a></li>' >> pages_root/index.html
          fi

          # --- Finalize index.html ---
          cat <<EOF >> pages_root/index.html
            </ul>
          </body>
          </html>
          EOF
      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v4
        with:
          path: 'pages_root'

  report:
    name: Report
    needs: build_and_analyze
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
